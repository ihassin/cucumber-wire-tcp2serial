require 'json'

if ARGV.length != 1
    puts "Destination header file not provided."
    puts
    puts "Usage: ruby generate_step_header.rb <filename for output header file>"
    exit(2)
end

steps_data = File.read('steps.json')
steps = JSON.parse(steps_data)

File.open(ARGV[0], 'w') do |header|
    header.puts "/*********************************************************"
    header.puts " * Step definitions for tests                            *"
    header.puts " *                                                       *"
    header.puts " * THIS FILE IS AUTOGENERATED BY generate_step_header.rb *"
    header.puts " * DO NOT MODIFY THIS FILE, CHANGE THE steps.json FILE   *"
    header.puts " * INSTEAD AND RE-RUN genereate_step_header.rb           *"
    header.puts " *********************************************************/"

    # Now generate the definitions
    steps.keys.each do |k|
        # Convert any punctuation or spaces to _ so we get a valid #define keyword
        step_define = k.gsub("{string}", "PARAM").upcase.gsub(/[^[:word:]]/, '_')
        header.puts "#define #{step_define} #{steps[k]}"
    end
end

